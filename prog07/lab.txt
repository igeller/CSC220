1. Create package prog07 and put my Jumble.java into it.  Look at the
   definition of the sort method.  When you run the program, it will
   show you the sorted version for every 1000th word.


2. Now put each word into the map (using the put method).  For a
   jumble lookup dictionary, what is the key?  What is the value?


3. Now write the code to solve a jumble.  What is the key?  Use the
   get method of map to get the unscrambled word associated with that
   key.  Test your jumble program.


4. Download DLLMap.java into prog07.  Then you run it, you will get
   the following output:

C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 

containsKey(A) = false
containsKey(C) = false
containsKey(L) = false
containsKey(M) = false
containsKey(Y) = false
containsKey(Z) = false
get(A) = null
get(C) = null
get(L) = null
get(M) = null
get(Y) = null
get(Z) = null
remove(A) = null
remove(C) = null
remove(L) = null
remove(M) = null
remove(Y) = null
remove(Z) = null
C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 

put(A,7) = null
put(A,9) = null
put(M,17) = null
put(M,19) = null
put(Z,3) = null
put(Z,20) = null
C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 


5. Implement find(key, start).  If the key is not there, it should
   return the PREVIOUS Node.  If there is no previous (key==Aaron),
   return null.  Now you should see:

C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 

containsKey(A) = false
containsKey(C) = true
containsKey(L) = false
containsKey(M) = true
containsKey(Y) = true
containsKey(Z) = false
get(A) = null
get(C) = null
get(L) = null
get(M) = null
get(Y) = null
get(Z) = null
remove(A) = null
remove(C) = null
remove(L) = null
remove(M) = null
remove(Y) = null
remove(Z) = null
C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 

put(A,7) = null
put(A,9) = null
put(M,17) = null
put(M,19) = null
put(Z,3) = null
put(Z,20) = null
C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 


6. Read containsKey(K key, Node start).  Finish implementing get(key, start).

C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 

containsKey(A) = false
containsKey(C) = true
containsKey(L) = false
containsKey(M) = true
containsKey(Y) = true
containsKey(Z) = false
get(A) = null
get(C) = 2
get(L) = null
get(M) = 12
get(Y) = 24
get(Z) = null
remove(A) = null
remove(C) = null
remove(L) = null
remove(M) = null
remove(Y) = null
remove(Z) = null
C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 

put(A,7) = null
put(A,9) = null
put(M,17) = null
put(M,19) = null
put(Z,3) = null
put(Z,20) = null
C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 


7. Finish implementing the remove(key, start).

C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 

containsKey(A) = false
containsKey(C) = true
containsKey(L) = false
containsKey(M) = true
containsKey(Y) = true
containsKey(Z) = false
get(A) = null
get(C) = 2
get(L) = null
get(M) = 12
get(Y) = 24
get(Z) = null
remove(A) = null
remove(C) = 2
remove(L) = null
remove(M) = 12
remove(Y) = 24
remove(Z) = null
E G I K O Q S U W 
4 6 8 10 14 16 18 20 22 

put(A,7) = null
put(A,9) = null
put(M,17) = null
put(M,19) = null
put(Z,3) = null
put(Z,20) = null
E G I K O Q S U W 
4 6 8 10 14 16 18 20 22 


8. Finish implementing the put(key, start).

C E G I K M O Q S U W Y 
2 4 6 8 10 12 14 16 18 20 22 24 

containsKey(A) = false
containsKey(C) = true
containsKey(L) = false
containsKey(M) = true
containsKey(Y) = true
containsKey(Z) = false
get(A) = null
get(C) = 2
get(L) = null
get(M) = 12
get(Y) = 24
get(Z) = null
remove(A) = null
remove(C) = 2
remove(L) = null
remove(M) = 12
remove(Y) = 24
remove(Z) = null
E G I K O Q S U W 
4 6 8 10 14 16 18 20 22 

put(A,7) = null
put(A,9) = 7
put(M,17) = null
put(M,19) = 17
put(Z,3) = null
put(Z,20) = 3
A E G I K M O Q S U W Z 
9 4 6 8 10 19 14 16 18 20 22 20 


8. Next switch Jumble to using DLLMap and see how many Jumble words
   you can unscramble.  Unfortunately, some of them aren't in "words"
   and you will need the much larger dictionary "dict".  But DLLMap is
   not fast enough to load "dict".  (Try it.)


HOMEWORK

9. Put SkipMap.java into prog07 and run it.

Q 
I Q Y 
E I M Q U Y 
C E G I K M O Q S U W Y 
B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 

containsKey(A)=false
containsKey(C)=true
containsKey(L)=true
containsKey(M)=true
containsKey(Z)=true
containsKey(Zoe)=false
get(A)=null
get(C)=null
get(L)=null
get(M)=null
get(Z)=null
get(Zoe)=null
remove(A)=null
remove(C)=null
remove(L)=null
remove(Q)=null
remove(Z)=null
remove(Zoe)=null
Q 
I Q Y 
E I M Q U Y 
C E G I K M O Q S U W Y 
B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 

put(A,10)=null
put(A,11)=null
put(L,20)=null
put(L,21)=null
put(Z,30)=null
put(Z,31)=null
Q 
I Q Y 
E I M Q U Y 
C E G I K M O Q S U W Y 
B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 


10. Look at containsKey.  Now implement get.

Q 
I Q Y 
E I M Q U Y 
C E G I K M O Q S U W Y 
B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 

containsKey(A)=false
containsKey(C)=true
containsKey(L)=true
containsKey(M)=true
containsKey(Z)=true
containsKey(Zoe)=false
get(A)=null
get(C)=2
get(L)=11
get(M)=12
get(Z)=25
get(Zoe)=null
remove(A)=null
remove(C)=null
remove(L)=null
remove(Q)=null
remove(Z)=null
remove(Zoe)=null
Q 
I Q Y 
E I M Q U Y 
C E G I K M O Q S U W Y 
B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 

put(A,10)=null
put(A,11)=null
put(L,20)=null
put(L,21)=null
put(Z,30)=null
put(Z,31)=null
Q 
I Q Y 
E I M Q U Y 
C E G I K M O Q S U W Y 
B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 

11. Implement remove.  Save the node returned by find in its own
variable.  Use this as the value of start for removing the key on this
level.  Then get its value as the start on the next level.
    
Q 
I Q Y 
E I M Q U Y 
C E G I K M O Q S U W Y 
B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 

containsKey(A)=false
containsKey(C)=true
containsKey(L)=true
containsKey(M)=true
containsKey(Z)=true
containsKey(Zoe)=false
get(A)=null
get(C)=2
get(L)=11
get(M)=12
get(Z)=25
get(Zoe)=null
remove(A)=null
remove(C)=2
remove(L)=11
remove(Q)=16
remove(Z)=25
remove(Zoe)=null

I Y 
E I M U Y 
E G I K M O S U W Y 
B D E F G H I J K M N O P R S T U V W X Y 
1 3 4 5 6 7 8 9 10 12 13 14 15 17 18 19 20 21 22 23 24 

put(A,10)=null
put(A,11)=null
put(L,20)=null
put(L,21)=null
put(Z,30)=null
put(Z,31)=null

I Y 
E I M U Y 
E G I K M O S U W Y 
B D E F G H I J K M N O P R S T U V W X Y 
1 3 4 5 6 7 8 9 10 12 13 14 15 17 18 19 20 21 22 23 24 


IF YOU ARE BRAVE, you can wait until lab on March 7 before doing
12-14.  It has to be done by the end of lab.

12. Implement put.

Q 
I Q Y 
E I M Q U Y 
C E G I K M O Q S U W Y 
B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 

containsKey(A)=false
containsKey(C)=true
containsKey(L)=true
containsKey(M)=true
containsKey(Z)=true
containsKey(Zoe)=false
get(A)=null
get(C)=2
get(L)=11
get(M)=12
get(Z)=25
get(Zoe)=null
remove(A)=null
remove(C)=2
remove(L)=11
remove(Q)=16
remove(Z)=25
remove(Zoe)=null

I Y 
E I M U Y 
E G I K M O S U W Y 
B D E F G H I J K M N O P R S T U V W X Y 
1 3 4 5 6 7 8 9 10 12 13 14 15 17 18 19 20 21 22 23 24 

put(A,10)=null
put(A,11)=10
put(L,20)=null
put(L,21)=20
put(Z,30)=null
put(Z,31)=30

I Y 
E I L M U Y 
E G I K L M O S U W Y Z 
A B D E F G H I J K L M N O P R S T U V W X Y Z 
11 1 3 4 5 6 7 8 9 10 21 12 13 14 15 17 18 19 20 21 22 23 24 31 


13. Change the call near the top of main from map.put(key, val, null) to
    map.put(key, val) and comment out the call to map.skipify()

R 
R X 
R X 
H R X 
H R X 
C E H J R X 
C D E G H I J K P R S W X 
B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 

containsKey(A)=false
containsKey(C)=true
containsKey(L)=true
containsKey(M)=true
containsKey(Z)=true
containsKey(Zoe)=false
get(A)=null
get(C)=2
get(L)=11
get(M)=12
get(Z)=25
get(Zoe)=null
remove(A)=null
remove(C)=2
remove(L)=11
remove(Q)=16
remove(Z)=25
remove(Zoe)=null
R 
R X 
R X 
H R X 
H R X 
E H J R X 
D E G H I J K P R S W X 
B D E F G H I J K M N O P R S T U V W X Y 
1 3 4 5 6 7 8 9 10 12 13 14 15 17 18 19 20 21 22 23 24 

put(A,10)=null
put(A,11)=10
put(L,20)=null
put(L,21)=20
put(Z,30)=null
put(Z,31)=30
R 
R X 
R X 
A H R X 
A H R X 
A E H J R X 
A D E G H I J K L P R S W X 
A B D E F G H I J K L M N O P R S T U V W X Y Z 
11 1 3 4 5 6 7 8 9 10 21 12 13 14 15 17 18 19 20 21 22 23 24 31 


14. Switch Jumble.java to use SkipMap.  Can it read in dict??  Can it
    solve "zagboe"?

